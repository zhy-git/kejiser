<?php
 namespace app\admin\controller; use think\Controller; use think\Db; use think\log; use think\Request; require EXTEND_PATH . "\127\170\160\x61\171\57\127\170\120\x61\171\56\x41\160\151\56\160\x68\x70"; use app\admin\service\AliyunService; class Pay extends Controller { public function notice() { goto eSjO3; B1RRU: $un_url = explode("\72", $un_data["\x75\x72\x6c"]); goto CxUhU; JHQjS: $data["\165\x6e\151\141\143\x69\144"] = $user["\x75\x6e\x69\x61\143\x69\x64"]; goto GLnSv; GLnSv: $alias = md5($data["\165\x72\154"] . $data["\x75\163\145\162\x6e\x61\155\145"] . $data["\165\156\x69\141\143\x69\x64"]); goto HzY0m; sijfZ: $mid = $order["\155\143\150\137\x69\144"]; goto wQzSl; eSjO3: $out_trade_no = Request::instance()->param("\151\144"); goto GV2vJ; hVmE5: $un_data["\x75\x72\x6c"] = $_SERVER["\110\x54\124\120\x5f\x48\x4f\123\x54"]; goto B1RRU; JH5Tz: $info = $aliyun->push($config, $alias); goto s8dPg; rtmgS: $order = Db::name("\171\x62\163\x63\137\x6f\162\144\145\162")->where(["\x6f\165\164\x5f\164\162\x61\x64\145\x5f\156\157" => $out_trade_no])->find(); goto sijfZ; SsC_d: return json_encode($rs); goto xsc8v; GV2vJ: $config = array("\141\x70\160\151\x64" => "\114\124\x41\111\x41\x36\145\x71\165\167\x53\171\153\x53\x43\113", "\163\x65\x63\162\x65\x74" => "\x32\117\124\x71\x6f\131\x53\x55\x32\x58\126\x5a\145\62\x38\143\146\151\x4a\160\152\x6b\61\106\x44\x33\x42\x45\161\x59", "\141\x70\160\153\x65\171" => "\62\x34\x39\x36\x35\x39\x33\x34"); goto rtmgS; HzY0m: $aliyun = new AliyunService(); goto JH5Tz; CxUhU: $data["\x75\162\154"] = $un_url[0]; goto HwCJq; HwCJq: $data["\165\163\x65\162\156\x61\x6d\x65"] = $user["\x6e\141\x6d\x65"]; goto JHQjS; wQzSl: $user = Db::name("\x79\142\163\143\x5f\x62\165\163\151\x6e\x65\x73\163")->where(["\151\144" => $mid])->find(); goto hVmE5; s8dPg: $rs["\x69\x6e\146\x6f"] = $info; goto SsC_d; xsc8v: } public function PayCallback() { goto IMrDk; FcCxz: $notify_data = $GLOBALS["\x48\124\x54\120\x5f\122\101\127\x5f\120\x4f\123\x54\x5f\x44\101\124\101"] ?: ''; goto cU_Cf; cU_Cf: Qj19j: goto olz5u; IMrDk: $notify_data = file_get_contents("\160\150\x70\72\57\57\x69\156\x70\x75\x74"); goto YYjTG; WZ8I5: exit("\346\x9c\xaa\xe6\x94\266\xe5\210\xb0\xe5\233\x9e\xe8\xb0\203"); goto wOU7Y; PHvdF: $out_trade_no = $doc->getElementsByTagName("\x6f\165\164\137\164\162\x61\144\145\x5f\x6e\157")->item(0)->nodeValue; goto eQOjP; wOU7Y: a1Zo6: goto Vya9Z; YYjTG: if ($notify_data) { goto Qj19j; } goto FcCxz; LUve1: $rs["\151\156\x66\x6f"] = $info; goto ZFwT2; JVHDP: $doc->loadXML($notify_data); goto PHvdF; olz5u: if ($notify_data) { goto a1Zo6; } goto WZ8I5; eQOjP: Log::write($out_trade_no . "\x2c\xe6\224\257\344\xbb\230\xe5\256\x8c\346\210\220", "\163\150\157\160\x5f\x70\x61\x79\x5f\x73\x75\x63\143\x65\163\163"); goto nvJOv; ZFwT2: return json_encode($rs); goto nBcW1; nvJOv: $info = $this->pay_set($out_trade_no, 1); goto LUve1; Vya9Z: $doc = new \DOMDocument(); goto JVHDP; nBcW1: } public function pay_set($out_trade_no, $pay_type) { goto TvtyZ; XhBZV: $data_pay = array("\160\x61\x79\x5f\x73\x74\141\x74\x75\163" => 1, "\160\141\x79\137\x74\x69\x6d\145" => time()); goto I9QH8; I9QH8: Db::startTrans(); goto Nb1tM; TvtyZ: $data = array("\157\162\x64\x65\162\137\x73\164\x61\164\165\163" => 1, "\160\x61\x79\x5f\163\164\141\x74\x75\x73" => 1, "\x70\x61\171\137\164\x79\x70\x65" => $pay_type, "\x70\x61\171\x5f\x74\x69\x6d\145" => time()); goto XhBZV; XOzhO: return "\163\x75\x63\143\145\x73\x73"; goto iZXBk; Nb1tM: try { goto O2gpa; qRs0W: Db::commit(); goto DNYD0; MH15y: Db::name("\171\x62\x73\143\x5f\x6f\x72\x64\x65\x72\x5f\160\141\x79\155\x65\x6e\164")->where(["\x6f\x75\164\137\x74\162\x61\144\x65\137\156\x6f" => $out_trade_no, "\160\141\171\137\163\x74\141\164\x75\163" => 0])->update($data_pay); goto qRs0W; U1twG: $this->notice($out_trade_no); goto XcyuA; XcyuA: ynyMo: goto Jzpm0; O2gpa: $res = Db::name("\171\142\x73\x63\137\157\x72\144\x65\162")->where(["\x6f\x75\x74\x5f\x74\162\x61\144\145\137\x6e\x6f" => $out_trade_no, "\157\x72\x64\145\x72\x5f\163\x74\141\164\x75\163" => 0])->update($data); goto MH15y; DNYD0: if (!(!empty($res) && $res > 0)) { goto ynyMo; } goto U1twG; Jzpm0: } catch (\Exception $e) { Db::rollback(); return null; } goto XOzhO; iZXBk: } }
